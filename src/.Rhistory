#NAME <- 'H3K4me3_H1.ENCFF277AOQ.hg19'
#NAME <- 'H3K4me3_H1.ENCFF277AOQ.hg38'
NAME <- 'H3K4me3_H1.ENCFF456NIF.hg19'
#NAME <- 'H3K4me3_H1.ENCFF456NIF.hg38'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
#colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.pdf'), path = OUT_DIR)
source('lib.R')
###
#NAME <- 'DeepZ'
#NAME <- 'H3K4me3_H1.ENCFF277AOQ.hg19'
#NAME <- 'H3K4me3_H1.ENCFF277AOQ.hg38'
#NAME <- 'H3K4me3_H1.ENCFF456NIF.hg19'
NAME <- 'H3K4me3_H1.ENCFF456NIF.hg38'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
#colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.pdf'), path = OUT_DIR)
source('lib.R')
###
#NAME <- 'H3K4me3_H1.ENCFF456NIF.hg19'
NAME <- 'H3K4me3_H1.ENCFF277AOQ.hg19'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
bed_df$len <- bed_df$end - bed_df$start
head(bed_df)
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('filter_peaks.', NAME, '.init.hist.pdf'), path = OUT_DIR)
# Remove long peaks
bed_df <- bed_df %>%
arrange(-len) %>%
filter(len < 5000)
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('filter_peaks.', NAME, '.filtered.hist.pdf'), path = OUT_DIR)
bed_df %>%
select(-len) %>%
write.table(file=paste0(DATA_DIR, NAME ,'.filtered.bed'),
col.names = FALSE, row.names = FALSE, sep = '\t', quote = FALSE)
source('lib.R')
###
NAME <- 'H3K4me3_H1.ENCFF456NIF.hg19'
#NAME <- 'H3K4me3_H1.ENCFF277AOQ.hg19'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
bed_df$len <- bed_df$end - bed_df$start
head(bed_df)
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('filter_peaks.', NAME, '.init.hist.pdf'), path = OUT_DIR)
# Remove long peaks
bed_df <- bed_df %>%
arrange(-len) %>%
filter(len < 7500)
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('filter_peaks.', NAME, '.filtered.hist.pdf'), path = OUT_DIR)
bed_df %>%
select(-len) %>%
write.table(file=paste0(DATA_DIR, NAME ,'.filtered.bed'),
col.names = FALSE, row.names = FALSE, sep = '\t', quote = FALSE)
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('filter_peaks.', NAME, '.init.hist.pdf'), path = OUT_DIR)
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
bed_df$len <- bed_df$end - bed_df$start
head(bed_df)
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('filter_peaks.', NAME, '.init.hist.pdf'), path = OUT_DIR)
# Remove long peaks
bed_df <- bed_df %>%
arrange(-len) %>%
filter(len < 7500)
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('filter_peaks.', NAME, '.filtered.hist.pdf'), path = OUT_DIR)
bed_df %>%
select(-len) %>%
write.table(file=paste0(DATA_DIR, NAME ,'.filtered.bed'),
col.names = FALSE, row.names = FALSE, sep = '\t', quote = FALSE)
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
# BiocManager::install("TxDb.Mmusculus.UCSC.mm10.knownGene")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
#library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(clusterProfiler)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
#library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(clusterProfiler)
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
#library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(clusterProfiler)
library(BiocManager)
# if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
install.packages("BiocManager")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
#library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(clusterProfiler)
BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
#library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(clusterProfiler)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
#library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(clusterProfiler)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(clusterProfiler)
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(clusterProfiler)
install.packages("clusterProfiler")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(clusterProfiler)
BiocManager::install("clusterProfiler")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(clusterProfiler)
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(clusterProfiler)
#NAME <- 'H3K4me3_A549.intersect_with_DeepZ'
#NAME <- 'DeepZ'
#NAME <- 'H3K4me3_A549.ENCFF573MUH.hg19.filtered'
NAME <- 'H3K4me3_A549.ENCFF832EOL.hg19.filtered'
BED_FN <- paste0(DATA_DIR, NAME, '.bed')
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
library(ggplot2)
library(dplyr)
library(tidyr)   # replace_na
library(tibble)  # column_to_rownames
###
DATA_DIR <- '/Users/kirillsikamov/Documents/GitHub/hse21_H3K4me3_ZDNA_human/data/'
OUT_DIR <- '/Users/kirillsikamov/Documents/GitHub/hse21_H3K4me3_ZDNA_human/images/'
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
#library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(clusterProfiler)
library(clusterProfiler)
#NAME <- 'H3K4me3_A549.intersect_with_DeepZ'
#NAME <- 'DeepZ'
#NAME <- 'H3K4me3_A549.ENCFF573MUH.hg19.filtered'
NAME <- 'H3K4me3_A549.ENCFF832EOL.hg19.filtered'
BED_FN <- paste0(DATA_DIR, NAME, '.bed')
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(clusterProfiler)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(clusterProfiler)
library(clusterProfiler)
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(clusterProfiler)
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
install.packages("ChIPseeker")
BiocManager::install("TChIPseeker")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(clusterProfiler)
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(clusterProfiler)
install.packages("ChIPseeker")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
#library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(clusterProfiler)
library(ChIPseeker)
install.packages(ChIPseeker)
install.packages("ChIPseeker")
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
# BiocManager::install("TxDb.Mmusculus.UCSC.mm10.knownGene")
BiocManager::install("ChIPseeker")
library(ChIPseeker)
#library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(clusterProfiler)
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
# BiocManager::install("TxDb.Mmusculus.UCSC.mm10.knownGene")
#BiocManager::install("ChIPseeker")
BiocManager::install("GO.db")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
#library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(clusterProfiler)
#NAME <- 'H3K4me3_A549.intersect_with_DeepZ'
#NAME <- 'DeepZ'
#NAME <- 'H3K4me3_A549.ENCFF573MUH.hg19.filtered'
NAME <- 'H3K4me3_A549.ENCFF832EOL.hg19.filtered'
BED_FN <- paste0(DATA_DIR, NAME, '.bed')
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
#pdf(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.pdf'))
png(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.png'))
plotAnnoPie(peakAnno)
dev.off()
png(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.png'))
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
#library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(clusterProfiler)
#NAME <- 'H3K4me3_A549.intersect_with_DeepZ'
#NAME <- 'DeepZ'
#NAME <- 'H3K4me3_A549.ENCFF573MUH.hg19.filtered'
NAME <- 'H3K4me3_A549.ENCFF832EOL.hg19.filtered'
BED_FN <- paste0(DATA_DIR, NAME, '.bed')
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
NAME <- 'H3K4me3_H1.ENCFF832EOL.hg19.filtered'
BED_FN <- paste0(DATA_DIR, NAME, '.bed')
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
NAME <- 'H3K4me3_H1.ENCFF456NIF.hg19.filtered'
BED_FN <- paste0(DATA_DIR, NAME, '.bed')
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
png(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.png'))
plotAnnoPie(peakAnno)
dev.off()
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
# BiocManager::install("TxDb.Mmusculus.UCSC.mm10.knownGene")
#BiocManager::install("ChIPseeker")
#BiocManager::install("GO.db")
BiocManager::install("org.Hs.eg.db")
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
png(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.png'))
plotAnnoPie(peakAnno)
dev.off()
pdf(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.pdf'))
png(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.png'))
plotAnnoPie(peakAnno)
dev.off()
png(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.png'))
plotAnnoPie(peakAnno)
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
library(org.Hs.eg.db)
#NAME <- 'H3K4me3_H1.intersect_with_ZHunt'
#NAME <- 'ZHunt'
#NAME <- 'H3K4me3_H1.ENCFF277AOQ.hg19.filtered'
NAME <- 'H3K4me3_H1.ENCFF456NIF.hg19.filtered'
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
install.packages("org.Hs.eg.db")
library(ChIPseeker)
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
# BiocManager::install("TxDb.Mmusculus.UCSC.mm10.knownGene")
#BiocManager::install("ChIPseeker")
#BiocManager::install("GO.db")
BiocManager::install("org.Hs.eg.db")
library(GO.db)
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
#pdf(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.pdf'))
png(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.png'))
plotAnnoPie(peakAnno)
dev.off()
library(org.Hs.eg.db)
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
# BiocManager::install("TxDb.Mmusculus.UCSC.mm10.knownGene")
#BiocManager::install("ChIPseeker")
#BiocManager::install("GO.db")
BiocManager::install("org.Hs.eg.db")
BiocManager::install("ChIPpeakAnno")
BiocManager::install("org.Hs.eg.db")
BiocManager::install("org.Mm.eg.db")
library(org.Hs.eg.db)
BiocManager::install("org.Hs.eg.db")
library(GO.db)
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
library(org.Hs.eg.db)
library(GO.db)
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(clusterProfiler)
library(org.Hs.eg.db)
NAME <- 'H3K4me3_H1.ENCFF456NIF.hg19.filtered'
BED_FN <- paste0(DATA_DIR, NAME, '.bed')
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
BiocManager::install("org.Hs.eg.db")
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
BiocManager::install("org.Hs.eg.db")
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
library(org.Hs.eg.db)
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
BiocManager::install("org.Hs.eg.db")
library(org.Hs.eg.db)
library(ChIPpeakAnno)
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
BED_FN <- paste0(DATA_DIR, NAME, '.bed')
library(ggplot2)
library(dplyr)
library(tidyr)   # replace_na
library(tibble)  # column_to_rownames
###
DATA_DIR <- '/Users/kirillsikamov/Documents/GitHub/hse21_H3K4me3_ZDNA_human/data/'
OUT_DIR <- '/Users/kirillsikamov/Documents/GitHub/hse21_H3K4me3_ZDNA_human/images/'
BED_FN <- paste0(DATA_DIR, NAME, '.bed')
#NAME <- 'H3K4me3_H1.intersect_with_ZHunt'
#NAME <- 'ZHunt'
#NAME <- 'H3K4me3_H1.ENCFF277AOQ.hg19.filtered'
NAME <- 'H3K4me3_H1.ENCFF456NIF.hg19.filtered'
BED_FN <- paste0(DATA_DIR, NAME, '.bed')
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
source('lib.R')
###
NAME <- 'zhunt'
#NAME <- 'H3K4me3_H1.ENCFF277AOQ.hg19'
#NAME <- 'H3K4me3_H1.ENCFF277AOQ.hg38'
#NAME <- 'H3K4me3_H1.ENCFF456NIF.hg19'
#NAME <- 'H3K4me3_H1.ENCFF456NIF.hg38'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
#colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.pdf'), path = OUT_DIR)
#NAME <- 'H3K4me3_H1.intersect_with_ZHunt'
NAME <- 'zhunt'
BED_FN <- paste0(DATA_DIR, NAME, '.bed')
###
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
source('lib.R')
###
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
# BiocManager::install("org.Hs.eg.db")
# BiocManager::install("GO.db")
# BiocManager::install("ChIPpeakAnno")
library(GO.db)
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(clusterProfiler)
library(org.Hs.eg.db)
library(ChIPpeakAnno)
###
#NAME <- 'H3K4me3_H1.intersect_with_ZHunt'
NAME <- 'zhunt'
#NAME <- 'H3K4me3_H1.ENCFF277AOQ.hg19.filtered'
#NAME <- 'H3K4me3_H1.ENCFF456NIF.hg19.filtered'
BED_FN <- paste0(DATA_DIR, NAME, '.bed')
###
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
pdf(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.pdf'))
png(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.png'))
plotAnnoPie(peakAnno)
dev.off()
# peak <- readPeakFile(BED_FN)
# pdf(paste0(OUT_DIR, 'chip_seeker.', NAME, '.covplot.pdf'))
# covplot(peak, weightCol="V5")
# dev.off()
#
source('lib.R')
###
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
# BiocManager::install("org.Hs.eg.db")
# BiocManager::install("GO.db")
# BiocManager::install("ChIPpeakAnno")
library(GO.db)
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(clusterProfiler)
library(org.Hs.eg.db)
library(ChIPpeakAnno)
###
NAME <- 'H3K4me3_H1.intersect_with_ZHunt'
#NAME <- 'zhunt'
#NAME <- 'H3K4me3_H1.ENCFF277AOQ.hg19.filtered'
#NAME <- 'H3K4me3_H1.ENCFF456NIF.hg19.filtered'
BED_FN <- paste0(DATA_DIR, NAME, '.bed')
###
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
pdf(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.pdf'))
png(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.png'))
plotAnnoPie(peakAnno)
dev.off()
# peak <- readPeakFile(BED_FN)
# pdf(paste0(OUT_DIR, 'chip_seeker.', NAME, '.covplot.pdf'))
# covplot(peak, weightCol="V5")
# dev.off()
#
source('lib.R')
###
# https://bioconductor.org/packages/release/bioc/vignettes/ChIPpeakAnno/inst/doc/quickStart.html
# BiocManager::install("ChIPpeakAnno")
# BiocManager::install("org.Hs.eg.db")
library(ChIPpeakAnno)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
###
peaks <- toGRanges(paste0(DATA_DIR, 'H3K4me3_H1.intersect_with_Zhunt.bed'), format="BED")
peaks[1:2]
annoData <- toGRanges(TxDb.Hsapiens.UCSC.hg19.knownGene)
annoData[1:2]
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="overlapping",
FeatureLocForDistance="TSS",
bindingRegion=c(-2000, 300))
data.frame(anno) %>% head()
anno$symbol <- xget(anno$feature, org.Hs.egSYMBOL)
data.frame(anno) %>% head()
anno_df <- data.frame(anno)
write.table(anno_df, file=paste0(DATA_DIR, 'H3K4me3_H1.intersect_with_ZHunt.genes.txt'),
col.names = TRUE, row.names = FALSE, sep = '\t', quote = FALSE)
uniq_genes_df <- unique(anno_df['symbol'])
write.table(uniq_genes_df, file=paste0(DATA_DIR, 'H3K4me3_H1.intersect_with_ZHunt.genes_uniq.txt'),
col.names = FALSE, row.names = FALSE, sep = '\t', quote = FALSE)
